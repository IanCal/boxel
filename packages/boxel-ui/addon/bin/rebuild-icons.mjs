import { execSync } from 'child_process';
import fs from 'fs';
import path from 'path';
import { optimize } from 'svgo';

const srcDir = new URL('../public/assets', import.meta.url).pathname;
const destDir = new URL('../src/icons', import.meta.url).pathname;

const PREFIX = `
// This file is auto-generated by 'pnpm rebuild-icons'
import type { Signature } from './types.ts';
import type { TemplateOnlyComponent } from '@ember/component/template-only';

const IconComponent: TemplateOnlyComponent<Signature> = <template>
`;
const SUFFIX = `
</template>;

export default IconComponent;
`;
for (const filename of fs.readdirSync(srcDir)) {
  let fullPath = path.resolve(srcDir, filename);
  let contents = fs.readFileSync(fullPath, 'utf-8');
  contents = optimize(contents, {
    path: fullPath,
    plugins: [
      {
        name: 'preset-default',
        params: {
          overrides: {
            removeTitle: false,
            removeDesc: { removeAny: false },
            removeViewBox: false,
          },
        },
      },
    ],
  }).data;
  contents = contents.replace(/<svg(.*?)>/, '<svg$1 ...attributes>');
  contents = `${PREFIX}${contents}${SUFFIX}`;
  let outFileName = filename.replace('.svg', '.gts');
  fs.writeFileSync(path.resolve(destDir, outFileName), contents);
}
execSync(`prettier -w ${destDir}/*`);
